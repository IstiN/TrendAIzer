name: Build and Deploy Fat JAR

on:
  push:
    tags:
      - 'v*.*.*'

  workflow_dispatch:

permissions:
  contents: write
  id-token: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'

      - name: Cache Gradle files
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Fat JAR
        run: ./gradlew clean build shadowJar -x integrationTest

      - name: Extract Tag Name
        id: extract_tag
        run: echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: app/build/libs/trendaizer-${{ env.tag_name }}-all.jar
          asset_name: trendaizer-${{ env.tag_name }}-all.jar
          asset_content_type: application/java-archive

  deploy:
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code (for context)
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          audience: https://github.com/IstiN/TrendAIzer
          create_credentials_file: true
          export_environment_variables: true


      - name: Debug GCP Authentication
        run: |
          echo "Credential File: $GOOGLE_APPLICATION_CREDENTIALS"
          cat $GOOGLE_APPLICATION_CREDENTIALS
          gcloud auth list
          gcloud config list
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          version: 'latest'

      - name: Deploy JAR to GCP VM
        run: |
          gcloud compute scp app/build/libs/trendaizer-${{ env.tag_name }}-all.jar testvm:~ --zone=southamerica-east1-b
