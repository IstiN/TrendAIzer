name: Run JAR on GCP VM

on:
  schedule:  # Run every 1 minute
    - cron: '*/1 * * * *'

jobs:
  run-jar:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Authenticate with Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
          audience: "https://github.com/IstiN/TrendAIzer"
          create_credentials_file: true
          export_environment_variables: true

      - name: Set up Cloud SDK (Cached)
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'gcloud'
          version: 'latest'

      - name: Get Latest Tag or Release
        id: get_latest_version
        run: |
          if [ -z "${{ inputs.version }}" ]; then
            latest_tag=$(git ls-remote --tags --refs https://github.com/IstiN/TrendAIzer.git | awk -F'/' '{print $NF}' | sort -V | tail -n1)
            if [ -z "$latest_tag" ]; then
              latest_tag=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                https://api.github.com/repos/IstiN/TrendAIzer/releases/latest | jq -r .tag_name)
            fi
            echo "Using latest tag: $latest_tag"
            echo "version=$latest_tag" >> $GITHUB_ENV
          else
            echo "Using provided version: ${{ inputs.version }}"
            echo "version=${{ inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Set Environment Variables and Run JAR on GCP VM
        run: |
          echo "Setting environment variables and running JAR on GCP VM..."
          
          # Create an env file to inject variables
          cat <<EOF > env_vars.sh
          export BINANCE_KEY='${{ secrets.BINANCE_KEY }}'
          export BINANCE_SECRET='${{ secrets.BINANCE_SECRET }}'
          export BINANCE_CACHE='${{ vars.BINANCE_CACHE }}'
          export BYBIT_CACHE='${{ vars.BYBIT_CACHE }}'
          export INDICATOR_CACHE='${{ vars.INDICATOR_CACHE }}'
          EOF
          
          # Copy env file to the VM
          gcloud compute scp env_vars.sh ${{ vars.GCP_VM_NAME }}:/opt/shared/env_vars.sh --zone=southamerica-east1-b
          
          # SSH into VM and execute commands
          gcloud compute ssh ${{ vars.GCP_VM_NAME }} --zone=southamerica-east1-b --command="
            echo 'Applying environment variables...';
            source /opt/shared/env_vars.sh;
            rm /opt/shared/env_vars.sh;  # Clean up

            echo 'Starting Java process from /opt/shared...';
            nohup java -cp /opt/shared/trendaizer-${{ env.version }}-all.jar \
              com.github.istin.tradingaizer.AlgoExecutor \
              ${{ inputs.additional_parameters }} \
              > /opt/shared/app.log 2>&1 &

            echo 'Java process started';
            sleep 2;  # Give the process time to start

            echo 'Checking process list:';
            pgrep -laf java;

            echo 'Checking logs:';
            tail -n 10 /opt/shared/app.log;
          "
